dnl This file should be processed with GNU Autoconf to produce a "configure"
dnl script, with which a user can:
dnl - check for build requirements/options (headers, libraries, functions,
dnl   data types);
dnl - handle user definable build options (compiler flags, extra features);
dnl - parse the ".in" files into standard files (Makefile's, manpages, etc.).
dnl
dnl Portions from this file were taken from the Xine-lib configure script.

dnl --------------------
dnl AC/AM Initialization
dnl --------------------

  AC_INIT()
  DATE=`date +%y%m%d`
  AM_INIT_AUTOMAKE(dibbler, git-$DATE, no-define)
  GENVERSION=1.1
  AC_SUBST(GENVERSION)

  VERINFO=1:0:0
  AC_SUBST(VERINFO)

  AC_EXEEXT
  AC_LANG_CPLUSPLUS

dnl -------------------
dnl Checks for programs
dnl -------------------

  AC_PROG_CXX
  AC_PROG_RANLIB
  AM_PROG_LIBTOOL
  AC_CHECK_TOOL([STRIP],[strip])
  AC_HEADER_STDC

dnl -----------------------------
dnl Debug builds & compiler flags
dnl -----------------------------

  LIB_CXXFLAGS="-D_REENTRANT"


  AM_CONDITIONAL(DEBUG, test x$debug = xyes)

dnl -------------------
dnl Check for endianess
dnl -------------------


dnl -----------------------
dnl Checks for header files
dnl -----------------------

  dnl create poslib-config.h
  AM_CONFIG_HEADER(Misc/dibbler-config.h)

AC_C_BIGENDIAN( 
  AC_DEFINE(ENDIAN_BIG, 1, [machine is bigendian]), 
  AC_DEFINE(ENDIAN_LITTLE, 1, [machine is littleendian]), 
  AC_MSG_ERROR(unknown endianess), 
  AC_MSG_ERROR(universial endianess not supported) 
) 


dnl -----------------------------------------
dnl Checks for Socket API and POSIX functions
dnl -----------------------------------------

  AC_CHECK_FUNCS(select socket inet_aton gethostname gethostbyname)

  if test $ac_cv_func_socket = no; then
    # socket is not in the default libraries.
    AC_CHECK_LIB(socket, socket,
      [ LIB_LIBS="$LIB_LIBS -lsocket" ])
  fi

dnl ---------------------
dnl Checks for data types
dnl ---------------------

TOPDIR=`pwd`
AC_SUBST(TOPDIR)

dnl ---------------------------------------------
dnl Detect OS (will be used to select proper port
dnl ---------------------------------------------
  AC_MSG_CHECKING(which port is appropriate for this system)
  system=`uname -s`
  case $system in
    Linux)
      ARCH="LINUX"
      PORT_SUBDIR="Port-linux"
      PORT_CFLAGS=
      PORT_LDFLAGS="-lpthread"
      ;;
    Darwin)
      ARCH="MACOS"
      PORT_SUBDIR="Port-macos"
      PORT_CFLAGS=
      PORT_LDFLAGS=
      ;;
    MINGW32*)
      ARCH="WIN2K"
      PORT_LDFLAGS = "-lws2_32"
      PORT_CFLAGS  = "-DMINGWBUILD"
      PORT_SUBDIR  = "Port-win2k"
      ;;
    *)
      AC_MSG_ERROR("Unsupported OS: uname returned $system")
      ;;
  esac
  AC_MSG_RESULT($PORT_SUBDIR)

dnl ------------------------------------------------------------
dnl ./configure parameters
dnl ------------------------------------------------------------

  AC_ARG_ENABLE(debug,
     [  --enable-debug          Turn on debugging (default: no)],
     [  case "${enableval}" in
          yes)
	    debug=yes; 
	    ;;                                                                                                             
          no) 
	    debug=no 
	    ;;                                                                                                                                 *) 
            AC_MSG_ERROR(bad value ${enableval} for --enable-debug)
	    ;;
	esac],
     [ debug=no ]
  )

  if test x$debug == xyes; then
     CPPFLAGS="$CPPFLAGS -O0 -g"
     LINKPRINT+=debug
  else
     CPPFLAGS="$CPPFLAGS -O2"
  fi

  AC_ARG_ENABLE(efence,
     [  --enable-efence         Enables linking with electric-fence (default: no)],
     [  case "${enableval}" in
          yes)
            efence=yes
            ;;
          no)
            efence=no
            ;;
          *)
            AC_MSG_ERROR(bad value ${enableval} for --enable-efence)
            ;;
        esac],
     [ efence=no]
   )

   if test x$efence == xyes; then
      LDFLAGS+=-lefence
      LINKPRINT+=efence
   fi


AC_SUBST(LDFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(ARCH)
AC_SUBST(PORT_SUBDIR)
AC_SUBST(PORT_LDFLAGS)
AC_SUBST(PORT_CFLAGS)
AC_SUBST(LINKPRINT)

dnl -----------------------------------------
dnl Parse Makefile.in's and other input files
dnl -----------------------------------------
    AC_CONFIG_FILES(Makefile.inc)
    AC_OUTPUT

dnl ----------------------------------------
dnl Print out configured parameters
dnl ----------------------------------------
echo
echo "Selected port  : $PORT_SUBDIR"
echo "Debug          : $debug"
echo "Electric fence : $efence"
echo
echo Type make to compile dibbler.
echo
