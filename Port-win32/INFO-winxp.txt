 Dibbler WinXP README
----------------------
$Id: INFO-winxp.txt,v 1.10 2004-02-28 16:07:19 thomson Exp $

For newest informations, please visit http://klub.com.pl/dhcpv6/

Plase note that WinXP support is preliminary. Consider this as highly
unstable and absolutely not user-friendly. Sorry, In windows environment
you have no friends and everything is your enemy.

					        Tomasz Mrugalski

 1. Installation
-----------------
Unpack this archive to some directory, for example c:\devel\dibbler.
Edit config file to suit your needs. in windows console type:
dibbler-server-winxp.exe run -d "c:\devel\dibbler"
Take a look at c:\devel\dibbler\server.log". If server starts
correctly, you can break (ctrl-c) and issue command:
dibbler-server-winxp.exe install -d "c:\devel\dibbler"

Repeat this for client.

 2. Running 
------------

dibbler-server.exe ACTION -d dirname 
e.g.: dibbler-client-winxp.exe install -d "c:\devel\dibbler\port-winxp"

Please note that double backslashes at the end of path are no longer needed.
	
where
	ACTION = status|start|stop|install|uninstall|run
	status    - show status and exit
	start     - start installed service
	stop      - stop installed service
	install   - install service
	uninstall - uninstall service
	run       - run interactively

2. Config file sanity check has some bugs
Do not use interface names. Use interface number instead.

3. If you get 10004 error, please add following lines to your
   client.conf to avoid virtual interfaces configuration:
iface 1 no-config
iface 2 no-config
iface 3 no-config

4. Be sure to properly place interfaces in server.conf. When user
   describes 5th interface while there is only interface with number
   4, server tries to listen on socket on non-existent interace and
   loops very quickly.

 3. Compilation
----------------

1. flex/bison++ under win32
To generate ClntParser.cpp and ClntLexer.cpp files, you can use
parser.bat. After generation, in file ClntLexer.cpp replace:
class istream;
with:
#include <iostream>
using namespace std;

2. flex binary included in cvs is slightly modified. It generates
#include "FlexLexer.h" instead of #include <FlexLexer.h>. You should
add .\ to include path if you have problem with missing FlexLexer.h.
Also note that FlexLexer.h is modified (std:: added in several places,
<fstream.h> is replaced with <fstream> etc.

